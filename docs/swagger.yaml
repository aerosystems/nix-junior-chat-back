basePath: /
definitions:
  handlers.LoginRequestBody:
    properties:
      password:
        example: P@ssw0rd
        type: string
      username:
        example: username
        type: string
    type: object
  handlers.RefreshTokenRequestBody:
    properties:
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
  handlers.RegistrationRequestBody:
    properties:
      password:
        example: P@ssw0rd
        type: string
      username:
        example: username
        type: string
    type: object
  handlers.Response:
    properties:
      data: {}
      error:
        type: boolean
      message:
        type: string
    type: object
  handlers.TokensResponseBody:
    properties:
      access_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
      refresh_token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        type: string
    type: object
  handlers.UpdatePasswordRequestBody:
    properties:
      new_password:
        example: NewP@ssw0rd
        type: string
      old_password:
        example: OldP@ssw0rd
        type: string
    type: object
  handlers.UpdateUsernameRequestBody:
    properties:
      username:
        example: username
        type: string
    type: object
host: localhost:80
info:
  contact:
    name: Artem Kostenko
    url: https://github.com/aerosystems
  description: Backend App for simple social Live Chat
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: 'NIX Junior: Chat App'
  version: "1.0"
paths:
  /v1/token/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: raw request body, should contain Refresh Token
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.RefreshTokenRequestBody'
      - description: should contain Access Token, with the Bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/handlers.TokensResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: refresh pair JWT tokens
      tags:
      - auth
  /v1/user/login:
    post:
      consumes:
      - application/json
      description: |-
        Username should contain:
        - lower, upper case latin letters and digits
        - minimum 8 characters length
        - maximum 40 characters length
        Password should contain:
        - minimum of one small case letter
        - minimum of one upper case letter
        - minimum of one digit
        - minimum of one special character
        - minimum 8 characters length
        - maximum 40 characters length
        Response contain pair JWT tokens, use /tokens/refresh for updating them
      parameters:
      - description: raw request body
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/handlers.TokensResponseBody'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: login user by credentials
      tags:
      - auth
  /v1/user/logout:
    post:
      consumes:
      - application/json
      parameters:
      - description: should contain Access Token, with the Bearer started
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: logout user
      tags:
      - auth
  /v1/user/register:
    post:
      consumes:
      - application/json
      description: |-
        Username should contain:
        - lower, upper case latin letters and digits
        - minimum 8 characters length
        - maximum 40 characters length
        Password should contain:
        - minimum of one small case letter
        - minimum of one upper case letter
        - minimum of one digit
        - minimum of one special character
        - minimum 8 characters length
        - maximum 40 characters length
      parameters:
      - description: raw request body
        in: body
        name: registration
        required: true
        schema:
          $ref: '#/definitions/handlers.RegistrationRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: registration user by credentials
      tags:
      - auth
  /v1/user/update-password:
    put:
      consumes:
      - application/json
      description: |-
        OldPassword/NewPassword should contain:
        - minimum of one small case letter
        - minimum of one upper case letter
        - minimum of one digit
        - minimum of one special character
        - minimum 8 characters length
        - maximum 40 characters length
      parameters:
      - description: raw request body
        in: body
        name: password
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdatePasswordRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: update password
      tags:
      - user
  /v1/user/update-username:
    put:
      consumes:
      - application/json
      description: |-
        Username should contain:
        - lower, upper case latin letters and digits
        - minimum 8 characters length
        - maximum 40 characters length
      parameters:
      - description: raw request body
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUsernameRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: update username
      tags:
      - user
swagger: "2.0"
